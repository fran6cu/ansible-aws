---

- name: Start
  hosts: localhost
  remote_user: testuser1
  gather_facts: false
  vars_files:
   - vars/info.yml

  task:
   - name: Create a VPC with default tenancy
     ec2_vpc_net: 
       aws_access_key: "{{ aws_id }}"
       aws_secret_key: "{{ aws_key }}"
       region: "{{ aws_region }}"
       name: test_vpc_net
       cidr_block: 10.10.0.0/16
       tags: 
         module: ec2_vpc_net
       tenancy: default
     register:ansibleVPC

   - name: vpc output
     debug:
       var: ansibleVPC

   - name: create internet gw for ansible vpc
     ec2_vpc_igw:
       aws_access_key: "{{ aws_id }}"
       aws_secret_key: "{{ aws_key}}"
       region: "{{ aws_region }}"
       state: present
       vpc_id: "{{ ansibleVPC.vpc.id }}"
       tags:
         Name: ansibleVPC_IGW
     register: ansibleVPC_igw

   - name: display ansibleVPC IGW details
     debug: 
       var: ansibleVPC_igw

   - name: create public subnet in "{{ aws_region }}"
     ec2_vpc_subnet: 
       aws_access_key: "{{ aws_id }}"
       aws_secret_key: "{{ aws_key }}"
       state: present
       cidr: 10.10.0.0/16
       vpc_id: "{{ ansibleVPC.vpc.id }}"
       map_public: yes
       tags: 
         Name: public_subnet
     register: public_subnet

   - name: show public subnet details
     debug: 
       var: public_subnet

   - name: create new route table for public subnet
     ec2_vpc_route_table:
       aws_access_key: "{{ aws_id }}"
       aws_secret_key: "{{ aws_key }}"
       region: "{{ aws_region }}"
       state: present
       vpc_id: "{{ ansibleVPC.vpc.id }}"
       tags: 
         Name: rt_ansibleVPC_PublicSubnet
       subnets: 
         - "{{ public_subnet.subnet.id }}"
       routes:
         - dest: 0.0.0.0/0
           gateway_id: "{{ ansibleVPC_igw.gateway_id }}"
     register: rt_ansibleVPC_PublicSubnet

   - name: display public route table
     debug: 
       var: rt_ansibleVPC_PublicSubnet
   
   - name: Create Security Group
     ec2_group:
       aws_access_key: "{{ aws_id }}"
       aws_secret_key: "{{ aws_key }}"
       region: "{{ aws_region }}"
       name: "Test Security Group"
       description: "Test Security Group"
       vpc_id: "{{ ansibleVPC.vpc.id }}"
       tags:
         Name: Test Security Group
       rules: 
         - proto: "tcp"
           ports: "22"
           cidr_ip: 0.0.0.0/16
     register: my_vpc_sg

   - name: Set Security Group ID in variable
     set_fact:
       sg_id: "{{ my_vpc_sq.group_id }}"
   
   - name: Find AMI Red Hat, no beta x86
     ec2_ami_info:
       aws_access_key: "{{ aws_id }}"
       aws_secret_key: "{{ aws_key }}"
       region: "{{ aws_region }}"
       owners: 309956199498
       filters:
         architecture: x86_64
         name: RHEL-8*HVM-*
     register: amis

   - name: Show AMI's
     debug:
       var: amis

   - name: Get the latest one
     set_fact:
       latest_ami: "{{ amis.images | sort(attribute='creation_date') | last }}"

   - name: Create SSH key
     ec2_key:
       aws_access_key: "{{ aws_id }}"
       aws_secret_key: "{{ aws_key }}"
       name: "{{ ssh_keyname }}"
       region: "{{ aws_region }}"
     register: ec2_key_result

   - name: Save private key
     copy: content="{{ ec2_key_result.key.private_key }}" dest ="./demo_key.pem" mode=0600
     when: ec2_key_result.changed

   - name: 
